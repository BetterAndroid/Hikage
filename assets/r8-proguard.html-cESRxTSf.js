import{_ as e,o as a,c as s,e as c}from"./app-ZnF1aHNS.js";const o={},d=c(`<h1 id="r8-与-proguard-混淆" tabindex="-1"><a class="header-anchor" href="#r8-与-proguard-混淆" aria-hidden="true">#</a> R8 与 Proguard 混淆</h1><blockquote><p>大部分场景下应用程序安装包可通过混淆压缩体积，这里介绍了混淆规则的配置方法。</p></blockquote><p><code>Hikage</code> 不需要额外配置混淆规则，由于 Hikage 装载的 <code>View</code> 不需要在 XML 中被定义，它们也可以同样被混淆。</p><p>你可以将你的自定义 <code>View</code>，例如 <code>com.yourpackage.YourView</code> 使用以下规则强制让它们被混淆。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">-allowobfuscation class com.yourpackage.YourView</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你一定要防止 <code>Hikage</code> 被混淆或者混淆后发生了问题，那么你可以使用以下规则来防止 <code>Hikage</code> 被混淆。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#adbac7;">-keep class com.highcapable.hikage**</span></span>
<span class="line"><span style="color:#adbac7;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),i=[d];function n(r,l){return a(),s("div",null,i)}const p=e(o,[["render",n],["__file","r8-proguard.html.vue"]]);export{p as default};
